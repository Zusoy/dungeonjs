import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { createIcon, initialize, unsubscribeSubscriptions, } from '@pmndrs/uikit/internals';
import { forwardRef, useEffect, useMemo, useRef } from 'react';
import { AddHandlers, usePropertySignals } from './utils.js';
import { useParent } from './context.js';
import { useComponentInternals } from './ref.js';
export const Icon = forwardRef((properties, ref) => {
    const parent = useParent();
    const outerRef = useRef(null);
    const propertySignals = usePropertySignals(properties);
    const internals = useMemo(() => createIcon(parent, properties.text, properties.svgWidth, properties.svgHeight, propertySignals.style, propertySignals.properties, propertySignals.default, outerRef), [parent, properties.svgHeight, properties.svgWidth, properties.text, propertySignals]);
    internals.interactionPanel.name = properties.name ?? '';
    useEffect(() => {
        const subscriptions = [];
        initialize(internals.initializers, subscriptions);
        return () => unsubscribeSubscriptions(subscriptions);
    }, [internals]);
    useComponentInternals(ref, parent.root.pixelSize, propertySignals.style, internals, internals.interactionPanel);
    return (_jsxs(AddHandlers, { ref: outerRef, handlers: internals.handlers, children: [_jsx("primitive", { object: internals.interactionPanel }), _jsx("primitive", { object: internals.iconGroup })] }));
});
